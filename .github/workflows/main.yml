name: Build

on:
  push:
    branches:
      - 'master'
      - 'staging**'
    paths-ignore:
    - 'docs/**'
  pull_request:
    paths-ignore:
    - 'docs/**'

jobs:
  # unit tests running on nvidia gpus
  nv-unit-tests:
    runs-on: [self-hosted, nvidia]

    steps:
      - uses: actions/checkout@v2

      - name: environment
        run: |
          nvidia-smi
          which python
          python --version
          which nvcc
          nvcc --version
          python -c "import torch; print('torch:', torch.__version__, torch)"
          python -c "import torch; print('CUDA available:', torch.cuda.is_available())"
      - name: Install deepspeed
        run: |
          pip install .[dev]
          ds_report
      - name: Unit tests
        run: |
          if [[ -d ./torch-extensions ]]; then rm -rf ./torch-extensions; fi
          TORCH_EXTENSIONS_DIR=./torch-extensions pytest --durations=0 --forked --verbose tests/unit/

  # unit tests running on amd gpus
  amd-unit-tests:
    # The type of runner that the job will run on
    runs-on: [self-hosted, amd]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: environment
        run: |
          rocm-smi
          which python
          python --version
          which hipcc
          hipcc --version
          python -c "import torch; print('torch:', torch.__version__, torch)"
          python -c "import torch; print('CUDA available:', torch.cuda.is_available())"

      # Runs a set of commands using the runners shell
      - name: Install deepspeed
        run: |
          #DS_BUILD_FUSED_ADAM=1 DS_BUILD_FUSED_LAMB=1 DS_BUILD_CPU_ADAM=1 DS_BUILD_TRANSFORMER=1 DS_BUILD_STOCHASTIC_TRANSFORMER=1 DS_BUILD_UTILS=1 pip install .[dev]
          sudo pip install .[dev]
          ds_report

      # Runs a set of commands using the runners shell
      - name: Unit tests
        run: |
          if [[ -d ./torch-extensions ]]; then rm -rf ./torch-extensions; fi
          TORCH_EXTENSIONS_DIR=./torch-extensions pytest --durations=0 --forked --verbose tests/unit/
